const Claims = artifacts.require('Claims');
const ClaimsData = artifacts.require('ClaimsData');
const ClaimsReward = artifacts.require('ClaimsReward');
const NXMaster = artifacts.require('NXMaster');
const MCR = artifacts.require('MCR');
const NXMToken = artifacts.require('NXMToken');
const TokenData = artifacts.require('TokenData');
const TokenFunctions = artifacts.require('TokenFunctionMock');
const TokenController = artifacts.require('TokenController');
const Pool1 = artifacts.require('Pool1Mock');
const Pool2 = artifacts.require('Pool2');
const PoolData = artifacts.require('PoolData');
const Quotation = artifacts.require('Quotation');
const QuotationDataMock = artifacts.require('QuotationDataMock');
const Governance = artifacts.require('Governance');
const ProposalCategory = artifacts.require('ProposalCategory');
const MemberRoles = artifacts.require('MemberRoles');
const EventCaller = artifacts.require('EventCaller');
const founderAddress = web3.eth.accounts[0];
const INITIAL_SUPPLY = 1500000 * 1e18;

module.exports = function(deployer) {
  deployer.then(async () => {
    console.log('1');
    await deployer.deploy(Claims);
    console.log('2');
    await deployer.deploy(ClaimsData);
    console.log('3');
    await deployer.deploy(ClaimsReward);
    console.log('4');
    await deployer.deploy(NXMaster);
    console.log('5');
    await deployer.deploy(Pool1);
    console.log('6');
    await deployer.deploy(Pool2);
    console.log('7');
    await deployer.deploy(PoolData);
    console.log('8');
    await deployer.deploy(MCR);
    console.log('9');
    const tc = await deployer.deploy(TokenController);
    await deployer.deploy(NXMToken, tc.address, founderAddress, INITIAL_SUPPLY);
    await deployer.deploy(TokenData);
    await deployer.deploy(TokenFunctions);
    await deployer.deploy(Quotation);
    await deployer.deploy(QuotationDataMock);
    await deployer.deploy(Governance);
    await deployer.deploy(ProposalCategory);
    await deployer.deploy(MemberRoles);
    await deployer.deploy(EventCaller);
  });
};
